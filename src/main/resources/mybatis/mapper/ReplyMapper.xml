<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- xml파일에는 SQL구문만 따로 작성하기 때문에 자바 메소드를 선언할 연동인터페이스를 매칭시켜준다. -->
<mapper namespace="com.spring.blog.repository.ReplyRepository">
    <select id="findAllByBlogId" resultType="com.spring.blog.dto.ReplyFindByIdDTO" parameterType="long">
        SELECT
            reply_id as replyId,
            reply_writer as replyWriter,
            reply_content as replyContent,
            published_at as publishedAt,
            updated_at as updatedAt
        FROM
            reply
        WHERE
            blog_id = #{blogId}
    </select>

    <select id="findByReplyId" resultType="com.spring.blog.dto.ReplyFindByIdDTO" parameterType="long">
        SELECT
            reply_id as replyId,
            reply_writer as replyWriter,
            reply_content as replyContent,
            published_at as publishedAt,
            updated_at as updatedAt
        FROM
            reply
        WHERE
            reply_id = #{replyId}
    </select>

    <delete id="deleteByReplyId" parameterType="long">
        DELETE FROM
            reply
        WHERE
            reply_id = #{replyId}
    </delete>
    
    <insert id="save" parameterType="com.spring.blog.dto.ReplyInsertDTO">
        INSERT INTO
            reply(blog_id, reply_writer, reply_content)
        VALUES
            (#{blogId}, #{replyWriter}, #{replyContent})
    </insert>

    <update id="update" parameterType="com.spring.blog.dto.ReplyUpdateDTO">
        UPDATE
            reply
        SET
            reply_writer = #{replyWriter},
            reply_content = #{replyContent},
            updated_at = now()
        WHERE
            reply_id = #{replyId}
    </update>

    <delete id="deleteByBlogId" parameterType="long">
        DELETE FROM
            reply
        WHERE
            blog_id = #{blogId}
    </delete>

</mapper>